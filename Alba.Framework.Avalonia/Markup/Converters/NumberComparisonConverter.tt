<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ output extension=".g.cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="static System.String" #>
<#  #nullable enable #>
<#

var binaryIntegerTypes = new[] {
    "SByte", "Int16", "Int32", "Int64", "Int128", "IntPtr",
    "Byte", "UInt16", "UInt32", "UInt64", "UInt128", "UIntPtr",
    "BigInteger",
};
var floatingNumberTypes = new[] {
    "Half", "Single", "Double",
};

#>
// <auto-generated />
#pragma warning disable
#nullable enable

using System.Numerics;
using Alba.Framework.Numerics;

namespace Alba.Framework.Avalonia.Markup.Converters;
<# foreach (var type in binaryIntegerTypes) { #>

[PublicAPI]
public class <#=type#>ComparisonConverter : IntegerComparisonConverter<<#=type#>>
{
    public <#=type#>ComparisonConverter() { }
    public <#=type#>ComparisonConverter(NumberComparisonOperator @operator) : base(@operator) { }
}
<# } #>
<# foreach (var type in floatingNumberTypes) { #>

public class <#=type#>ComparisonConverter : FloatingComparisonConverter<<#=type#>, <#=type#>EpsilonOperations>
{
    public <#=type#>ComparisonConverter() { }
    public <#=type#>ComparisonConverter(NumberComparisonOperator @operator) : base(@operator) { }
}
<# } #>
<# #nullable disable #>